# name: Foodgram CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   tests:
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: postgres
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.9'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install flake8
#           pip install -r ./backend/requirements.txt

#       - name: Lint with flake8
#         run: python -m flake8

#   build_and_push_to_docker_hub:
#     runs-on: ubuntu-latest
#     needs: tests
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push backend image
#         uses: docker/build-push-action@v4
#         with:
#           context: ./backend
#           push: true
#           tags: batiskaf24/foodgram_backend:latest

#       - name: Build and push frontend image
#         uses: docker/build-push-action@v4
#         with:
#           context: ./frontend
#           push: true
#           tags: batiskaf24/foodgram_frontend:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build_and_push_to_docker_hub
#     if: github.ref == 'refs/heads/main'
#     steps:
#       - name: Deploy on remote server
#         uses: appleboy/ssh-action@v0.1.9
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.SSH_PASSPHRASE }}
#           script: |
#             cd foodgram
#             sudo docker compose pull
#             sudo docker compose down
#             sudo docker compose up -d
#             sudo docker compose exec backend python manage.py migrate --noinput
#             sudo docker compose exec backend python manage.py collectstatic --noinput

#   send_message:
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#       - name: Notify in Telegram
#         uses: appleboy/telegram-action@master
#         with:
#           to: ${{ secrets.TELEGRAM_TO }}
#           token: ${{ secrets.TELEGRAM_TOKEN }}
#           message: Деплой успешно выполнен на сервере!!
name: Foodgram CI/CD

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip
        pip install flake8
        cd backend/
        pip install -r requirements.txt 
    - name: Test with flake8 and django tests
      run: |
        python -m flake8
  
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend
  
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d
            sudo docker compose exec backend python manage.py migrate --noinput
            sudo docker compose exec backend python manage.py collectstatic --noinput

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
