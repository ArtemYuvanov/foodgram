# name: Foodgram CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   tests:
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: postgres
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.9'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install flake8
#           pip install -r ./backend/requirements.txt

#       - name: Lint with flake8
#         run: python -m flake8

#   build_and_push_to_docker_hub:
#     runs-on: ubuntu-latest
#     needs: tests
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push backend image
#         uses: docker/build-push-action@v4
#         with:
#           context: ./backend
#           push: true
#           tags: batiskaf24/foodgram_backend:latest

#       - name: Build and push frontend image
#         uses: docker/build-push-action@v4
#         with:
#           context: ./frontend
#           push: true
#           tags: batiskaf24/foodgram_frontend:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build_and_push_to_docker_hub
#     if: github.ref == 'refs/heads/main'
#     steps:
#       - name: Deploy on remote server
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.SSH_PASSPHRASE }}
#           script: |
#             cd foodgram
#             sudo docker compose pull
#             sudo docker compose down
#             sudo docker compose up -d
#             sudo docker compose exec backend python manage.py migrate --noinput
#             sudo docker compose exec backend python manage.py collectstatic --noinput

#   send_message:
#     runs-on: ubuntu-latest
#     needs: deploy
#     steps:
#       - name: Notify in Telegram
#         uses: appleboy/telegram-action@master
#         with:
#           to: ${{ secrets.TELEGRAM_TO }}
#           token: ${{ secrets.TELEGRAM_TOKEN }}
#           message: Деплой успешно выполнен на сервере!!
name: Foodgram CI/CD Debug

on:
  push:
    branches:
      - main

jobs:
  debug_variables:
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Show all secrets and env
        run: |
          echo "=== DEBUG ENV VARIABLES ==="
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}"
          echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}"
          echo "HOST=${{ secrets.HOST }}"
          echo "USER=${{ secrets.USER }}"
          echo "SSH_KEY=${{ secrets.SSH_KEY }}"
          echo "PASSPHRASE=${{ secrets.PASSPHRASE }}"
          echo "TELEGRAM_TO=${{ secrets.TELEGRAM_TO }}"
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}"
          echo "==========================="

      - name: Debug Docker login
        run: |
          set -x
          echo "Trying Docker login..."
          docker --version
          echo "Username: $DOCKER_USERNAME"
          echo "Password length: ${#DOCKER_PASSWORD}"

      - name: Debug SSH action
        run: |
          set -x
          echo "Debug SSH variables..."
          echo "HOST=$HOST"
          echo "USER=$USER"
          echo "SSH_KEY length: ${#SSH_KEY}"
          echo "PASSPHRASE length: ${#PASSPHRASE}"

      - name: Debug Telegram variables
        run: |
          set -x
          echo "Telegram variables:"
          echo "TO=$TELEGRAM_TO"
          echo "TOKEN length: ${#TELEGRAM_TOKEN}"
