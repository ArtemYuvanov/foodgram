volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:15
    volumes:
      - pg_data:/var/lib/postgresql/pg_data
    env_file:
      - ./.env

  backend:
    image: batiskaf24/foodgram_backend
    build: ../backend
    volumes:
      - static:/app/static/
      - media:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    image: batiskaf24/foodgram_frontend
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static:/var/html/static/
      - media:/var/html/media/
    depends_on:
      - backend
      - frontend
    restart: always
